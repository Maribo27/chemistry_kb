agent_find_mass_fraction_of_elem_in_subst
=>nrel_main_idtf:
    [агентная scp-программа поиска массовой доли элемента в веществе](* <- lang_ru;;*);
	[agent scp-program search mass fraction of element in substance](* <- lang_en;;*);
<- agent_scp_program;;

scp_program -> agent_find_mass_fraction_of_elem_in_subst
(*
    -> rrel_params: .agent_find_mass_fraction_of_elem_in_subst_params
	(*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
	*);;

    -> rrel_operators: .agent_find_mass_fraction_of_elem_in_subst_operators
    (*

        ->rrel_init:.operator0
        (*
            <-printNl;;
            -> rrel_1: rrel_scp_const: [start];;
            =>nrel_goto:.operator0A;;
        *);;
        ->.operator0A
        (*
            <-searchElStr3;;

            ->rrel_1:rrel_assign:rrel_scp_var:_temp;;
            ->rrel_2:rrel_fixed:rrel_scp_var:_input_arc;;
            ->rrel_3:rrel_assign:rrel_scp_var:_quest;;

            =>nrel_goto:.operator0B;;
        *);;

        ->.operator0B
        (*
            <-searchElStr3;;

            ->rrel_1:rrel_fixed:rrel_scp_const:action_find_mass_fraction_of_elem_in_subst;;
            ->rrel_2:rrel_assign:rrel_scp_var:rrel_pos_const_perm:_arc1;;
            ->rrel_3:rrel_fixed:rrel_scp_var:_quest;;

            =>nrel_then:.operator0C;;
            =>nrel_else:.operator_return;;
        *);;

        //находим первый аргумент - вещество
        ->.operator0C_1arg
        (*
            <- searchElStr5;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _subst;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;

            =>nrel_then:.operator0C_2arg;;
            =>nrel_else:.operator_return;;
        *);;

        //находим второй аргумент - элемент
        ->.operator0C_2arg
        (*
            <- searchElStr5;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
		  	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _elem;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  	-> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;

            =>nrel_then:.operator_gen_answer;;
            =>nrel_else:.operator_return;;
        *);;

        //генерируем узел-ответ
        ->.operator_gen_answer
        (*
            <-genEl;;

            ->rrel_1:rrel_assign:rrel_node:rrel_const:rrel_scp_var:_answer;;

            =>nrel_goto:.operator1;;
        *);;

        ->.operator1
        (*
            <-genEl;;

             ->rrel_1:rrel_assign:rrel_node:rrel_const:rrel_scp_var:_set;;

             =>nrel_goto:.operator2;;
        *);;

        ->.operator2
        (*
            <-searchSetStr5;;

            ->rrel_1:rrel_fixed:rrel_scp_var:_subst;;
            ->rrel_2: rrel_assign: rrel_scp_var:rrel_pos_const_perm: _arc1;;
            ->rrel_3:rrel_fixed:rrel_scp_var:_elem;;
            ->rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            ->rrel_5: rrel_assign: rrel_scp_var: _rel;;

            ->rrel_set_5:rrel_fixed:rrel_scp_var:rrel_set:_set;;

            =>nrel_then:.operator3;;
            =>nrel_else:.operator_return;;
        *);;

        ->.operator3
        (*
            <-searchElStr3;;

            ->rrel_1:rrel_fixed:rrel_scp_var:_set;;
            ->rrel_2: rrel_assign: rrel_scp_var:rrel_pos_const_perm: _arc1;;
            ->rrel_3:rrel_assign:rrel_scp_var:_rel;;

            =>nrel_then:.operator4;;
            =>nrel_else:.operator_return;;
        *);;

        ->.operator4
        (*
            <-eraseEl;;

            ->rrel_1:rrel_fixed:rrel_scp_var:rrel_erase:_arc1;;

            =>nrel_goto:.operator41;;
        *);;

        ->.operator41
        (*
            <-searchElStr3;;

            ->rrel_1:rrel_fixed:rrel_scp_var:_rel;;
            ->rrel_2:rrel_assign:rrel_scp_var:rrel_pos_const_perm:_arc;;
            ->rrel_3:rrel_fixed:rrel_scp_const:atomic_multiplicity;;

            =>nrel_then:.operator42;;
            =>nrel_else:.operator3;;
        *);;

        ->.operator42
        (*
            <-searchElStr5;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _rel;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc1;;
            -> rrel_3: rrel_assign: rrel_scp_var: _num;;
            -> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_measurement;;            

            =>nrel_then:.operator43;;
            =>nrel_else:.operator_return;;
        *);;

        ->.operator43
        (*
            <-searchElStr5;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _num;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc1;;
            -> rrel_3: rrel_assign: rrel_scp_var: _temp_link;;
            -> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_main_idtf;;

            =>nrel_then:.operator44;;
            =>nrel_else:.operator_return;;
        *);;

        //присваиваем значение коэффициента ссылке
        ->.operator14
        (*
            <-contAssign;;

            -> rrel_1: rrel_assign: rrel_scp_var: _link_multiplicity;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _temp_link;;

            =>nrel_goto:.operator44_print;;
        *);;

        ->.operator44_print
        (*
            <-printNl;;

            ->rrel_1:rrel_scp_var:_link_multiplicity;;

            =>nrel_goto:.operator15;;
        *);;

        //ищем атомную массу элемента
        ->.operator5
        (*
            <-searchElStr5;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc1;;
            -> rrel_3: rrel_assign: rrel_scp_var: _temp_node;;
            -> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_atomic_mass;;

            =>nrel_then:.operator51;;
            =>nrel_else:.operator_return;;
        *);;

        ->.operator51
        (*
            <-searchElStr5;;

            -> rrel_1: rrel_assign: rrel_scp_var: _temp_node1;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc1;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _temp_node;;
            -> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_measurement;;

            =>nrel_then:.operator52;;
            =>nrel_else:.operator_return;;
        *);;

        ->.operator52
        (*
            ->searchElStr5;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _temp_node1;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
            -> rrel_3: rrel_assign: rrel_scp_var: _num;;
            -> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            -> rrel_5: rrel_fixed: rrel_scp_const: rrel_aem;;

            =>nrel_then:.operator53;;
            =>nrel_else:.operator_return;;       
        *);;

        ->.operator53
        (*
            -> rrel_1: rrel_fixed: rrel_scp_var: _temp_node1;;
            -> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc1;;
            -> rrel_3: rrel_assign: rrel_scp_var: _temp_link;;
            -> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_main_idtf;;

            =>nrel_then:.operator54;;
            =>nrel_else:.operator_return;;
        *);;

        //присваиваем значение атомной массы ссылке
        ->.operator55
        (*
            <-contAssign;;

            -> rrel_1: rrel_assign: rrel_scp_var: _link_atomic_mass;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _temp_link;;

            =>nrel_goto:.operator55_print;;
        *);;

        ->.operator10_print
        (*
            <-printNl;;

            ->rrel_1:rrel_scp_var:_link_atomic_mass;;

            =>nrel_goto:.operator6;;
        *);;       

        //перемножаем атомную массу аргумента на его коэффициента
        ->.operator6
        (*
            <-contMult;;

            ->rrel_1:rrel_assign:rrel_scp_var:_link_mass_of_elem;;
            ->rrel_2:rrel_fixed:rrel_scp_var:_link_atomic_mass;;
            ->rrel_3:rrel_fixed:rrel_scp_var:_link_multiplicity;;

            =>nrel_goto:.operator6_print;;
        *);;

        ->.operator6_print
        (*
            <-printNl;;

            ->rrel_1:rrel_scp_var:_link_mass_of_elem;;

            =>nrel_goto:.operator_answer0;;
        *);;

        ->.operator_answer0
        (*
            <-genElStr3;;

            ->rrel_1:rrel_fixed:rrel_scp_var:_answer;;
            ->rrel_2:rrel_assign:rrel_scp_var: rrel_pos_const_perm: _arc;;
            ->rrel_3:rrel_fixed:rrel_scp_var:_link_mass_of_elem;;

            =>nrel_goto:.operator_answer1;;
        *);;

        ->operator_answer1
        (*
            <-genElStr5;;

            -> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_common:_arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;							
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_answer;;

            =>nrel_goto:.operator_answer2;;
        *);;

        ->.operator_answer2
        (*
            <-eraseEl;;

            ->rrel_1:rrel_fixed:rrel_scp_var:rrel_erase:_set;;

            =>nrel_goto:.operator_return;;
        *);;

        -> .operator_return
		(*
			<- return;;
		*);;
    *);;
*);;